{"version":3,"sources":["components/GithubButton/GithubButton.js","components/Header/Header.js","components/ImageGrid/ImageGrid.js","components/InputForm/InputForm.js","api/unsplashAccessKey.js","components/SearchBar/SearchBar.js","App.js","index.js"],"names":["GithubButton","className","href","target","rel","Icon","name","size","Header","Image","fluid","Component","ImageGrid","style","overflow","dataLength","this","props","images","length","next","hasMore","loader","map","image","links","html","src","urls","regular","alt","alt_description","id","React","InputForm","useState","setImages","page","setPage","query","setQuery","getPhotos","apiUrl","fetch","then","res","json","data","imagesFromApi","results","useEffect","onSubmit","e","preventDefault","Input","type","action","icon","iconPosition","placeholder","onChange","value","SearchBar","App","ReactDOM","render","document","getElementById"],"mappings":"qWAaeA,G,OARM,kBACnB,qBAAKC,UAAU,mBAAf,SACI,mBAAGC,KAAK,mDAAmDC,OAAO,SAASC,IAAI,sBAA/E,SACG,cAACC,EAAA,EAAD,CAAOJ,UAAU,SAASK,KAAK,SAASC,KAAK,cCUvCC,G,8KATP,OACI,sBAAKP,UAAU,SAAf,UACI,cAACQ,EAAA,EAAD,CAAOR,UAAU,MAAMS,OAAK,IAC5B,cAAC,EAAD,W,GALKC,c,iCCqBNC,G,qLApBP,OACC,qBAAKX,UAAU,iBAAf,SACC,cAAC,IAAD,CAAgBY,MAAO,CAACC,SAAU,UAAWC,WAAYC,KAAKC,MAAMC,OAAOC,OAAQC,KAAMJ,KAAKC,MAAMG,KAAMC,SAAS,EAAMC,OAAQ,qBAAKrB,UAAU,SAAf,SAAwB,qBAAKA,UAAU,0CAAf,SAAyD,sBAAKA,UAAU,mBAAf,UACnN,wBAAW,wBAAW,+BADrB,SAGA,qBAAKA,UAAU,aAAf,SACCe,KAAKC,MAAMC,OAAOK,KAAI,SAACC,GAAD,OACrB,qBAAKvB,UAAU,QAAf,SACE,mBAAGC,KAAMsB,EAAMC,MAAMC,KAAMvB,OAAO,SAASC,IAAI,sBAA/C,SACA,qBAAoBuB,IAAKH,EAAMI,KAAKC,QAASC,IAAKN,EAAMO,iBAA9CP,EAAMQ,qB,GAXNC,IAAMtB,Y,OCsDfuB,MAnDf,WAAsB,IAAD,EAEWC,mBAAS,IAFpB,mBAEVjB,EAFU,KAEFkB,EAFE,OAGOD,mBAAS,GAHhB,mBAGVE,EAHU,KAGJC,EAHI,OAISH,mBAAS,IAJlB,mBAIVI,EAJU,KAIHC,EAJG,KAWjB,SAASC,IACP,IAAIC,EAAM,mCACPH,IAAOG,EAAM,uDAAmDH,IACnEG,GAAM,gBAAaL,GACnBK,GAAM,qBCxBM,+CD0BZC,MAAMD,GACLE,MAAK,SAACC,GAAD,OAAOA,EAAIC,UAChBF,MAAK,SAACG,GAAQ,IAAD,EAERC,EAAa,UAAGD,EAAKE,eAAR,QAAmBF,EAC5B,IAAPV,GAAUD,EAAUY,GACvBZ,GAAU,SAAAlB,GAAM,4BAAQA,GAAR,YAAmB8B,UAcrC,OA/BAE,qBAAU,WACTT,MAEE,CAACJ,IA6BF,gCACE,sBAAKpC,UAAU,mBAAf,UACA,sBAAMkD,SAbV,SAA4BC,GAC1BA,EAAEC,iBACFf,EAAQ,GACRG,KAUE,SACE,cAACa,EAAA,EAAD,CAAOrD,UAAU,OAAOsD,KAAK,OAAOC,OAAO,SAASC,KAAK,SAASC,aAAa,OAAOC,YAAY,yBAAyBC,SARjI,SAA2BR,GACvBZ,EAASY,EAAEjD,OAAO0D,QAOwIA,MAAOtB,MAEjK,qBAAItC,UAAU,UAAd,kCAA6C,mBAAGC,KAAK,+BAAR,oCAE7C,cAAC,EAAD,CAAWgB,OAAQA,EAAQE,KAAM,kBAAMkB,GAAQ,SAACD,GAAD,OAAQA,EAAO,YEhCvDyB,G,8KAbP,OACE,gCACE,qBAAK7D,UAAU,YAAf,SACE,qBAAKA,UAAU,kBAAf,SACE,oBAAIA,UAAU,UAAd,wFAGA,cAAC,EAAD,W,GAVQU,cCYToD,G,8KATP,OACI,gCACI,cAAC,EAAD,IACA,cAAC,EAAD,W,GALEpD,c,OCClBqD,IAASC,OACL,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.d89c4f9a.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Icon } from 'semantic-ui-react'\r\n\r\nimport './github-button.css';\r\n\r\nconst GithubButton = () => (\r\n  <div className=\"github-container\">\r\n      <a href=\"https://www.github.com/PrathmeshSadake/unsplashy\" target=\"_blank\" rel=\"noreferrer noopener\">\r\n         <Icon  className=\"github\" name='github' size='big'/>\r\n      </a>\r\n  </div>\r\n)\r\n\r\nexport default GithubButton;","import React, { Component } from 'react';\r\nimport { Image } from 'semantic-ui-react'\r\n\r\nimport GithubButton from '../GithubButton/GithubButton';\r\n\r\nimport './header.css';\r\n\r\nclass Header extends Component{\r\n    render(){\r\n        return(\r\n            <div className=\"header\" >\r\n                <Image className=\"img\" fluid/>\r\n                <GithubButton/>\r\n            </div>\r\n        )\r\n    }\r\n};\r\n\r\nexport default Header;","import React from 'react';\r\nimport InfiniteScroll from 'react-infinite-scroll-component';\r\n\r\nimport './image-grid.css';\r\nimport './loader.css';\r\n\r\nclass ImageGrid extends React.Component{\r\n    render(){\r\n        return(\r\n         <div className=\"grid-container\">\r\n          <InfiniteScroll style={{overflow: 'hidden'}} dataLength={this.props.images.length} next={this.props.next} hasMore={true} loader={<div className=\"loader\"><div className=\"loadingio-spinner-dual-ball-7vhy8l1xg7t\"><div className=\"ldio-9ro5rlpgzop\">\r\n         <div></div><div></div><div></div>\r\n         </div></div></div>}>\r\n          <div className=\"image-grid\">\r\n          {this.props.images.map((image) => (\r\n            <div className=\"image\">\r\n              <a href={image.links.html} target=\"_blank\" rel=\"noopener noreferrer\" >\r\n              <img key={image.id} src={image.urls.regular} alt={image.alt_description} />\r\n            </a>\r\n            </div>\r\n          ))}\r\n          </div>\r\n          </InfiniteScroll>\r\n         </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default ImageGrid;","import React, { useState, useEffect } from 'react';\r\nimport { Input } from 'semantic-ui-react';\r\n\r\n\r\nimport ImageGrid from '../ImageGrid/ImageGrid';\r\nimport accessKey from '../../api/unsplashAccessKey';\r\n\r\nimport './input-form.css';\r\n\r\nfunction InputForm() {\r\n\r\n    const [images, setImages] = useState([]);\r\n    const [page, setPage] = useState(1);\r\n    const [query, setQuery] = useState('');\r\n  \r\n    useEffect(()=>{\r\n     getPhotos();\r\n     // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [page]);\r\n  \r\n    function getPhotos(){\r\n      let apiUrl = `https://api.unsplash.com/photos?`;\r\n      if(query) apiUrl = `https://api.unsplash.com/search/photos?query=${query}`;\r\n      apiUrl += `&page=${page}`;\r\n      apiUrl += `&client_id=${accessKey}`; \r\n  \r\n      fetch(apiUrl)\r\n      .then((res)=>res.json())\r\n      .then((data)=>{\r\n        // data.results is response from query search and data from normal api url\r\n      const imagesFromApi = data.results ?? data;\r\n      if(page===1) setImages(imagesFromApi);\r\n      setImages(images => [...images, ...imagesFromApi])});\r\n    }\r\n  \r\n    \r\n    function handleSearchSubmit(e){\r\n      e.preventDefault();\r\n      setPage(1);\r\n      getPhotos();\r\n    }\r\n\r\n    function handleInputChange(e){\r\n        setQuery(e.target.value);\r\n    }\r\n  \r\n    return (\r\n      <div>\r\n        <div className=\"search-container\">\r\n        <form onSubmit={handleSearchSubmit} >\r\n          <Input className=\"form\" type=\"text\" action=\"search\" icon='search' iconPosition='left' placeholder=\"Search for free images\" onChange={handleInputChange} value={query} />\r\n        </form>\r\n        <h3 className=\"license\">Read more about the  <a href=\"https://unsplash.com/license\">Unsplash License</a></h3>\r\n        </div>\r\n        <ImageGrid images={images} next={() => setPage((page)=>page + 1)}/>\r\n       </div>\r\n\r\n    );\r\n  }\r\n\r\nexport default InputForm;","const accesskey = 'YQm143tVS6oQ_KwFG5G6OdmeBVs0PX1PK3sqc2eftMc';\r\n\r\nexport default accesskey;","import React, { Component } from 'react';\r\n\r\nimport InputForm from '../InputForm/InputForm';\r\n\r\nimport './search-bar.css';\r\n\r\nclass SearchBar extends Component{\r\n  \r\n    render(){\r\n        return(\r\n          <div>\r\n            <div className=\"container\">\r\n              <div className=\"inner-container\">\r\n                <h1 className=\"heading\">The best source for freely-useable photos shared by talented creators.</h1>\r\n                </div>\r\n                </div>\r\n                <InputForm />\r\n              \r\n            </div>\r\n        )\r\n    }\r\n}\r\nexport default SearchBar","import React, { Component } from 'react';\r\n\r\nimport Header from './components/Header/Header';\r\nimport SearchBar from './components/SearchBar/SearchBar';\r\n\r\nimport './App.css';\r\n\r\nclass App extends Component{\r\n    render(){\r\n        return(\r\n            <div>\r\n                <Header />\r\n                <SearchBar/>\r\n            </div>\r\n        );\r\n    };\r\n};\r\n\r\nexport default App;","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\n\r\nimport App from './App';\r\n\r\n// semantic-ui min.css\r\nimport 'semantic-ui-css/semantic.min.css';\r\n\r\nReactDOM.render(\r\n    <App/>,\r\n    document.getElementById('root')\r\n);\r\n"],"sourceRoot":""}